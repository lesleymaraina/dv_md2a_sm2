---
title: "Descriptive & Structural Views of Categorical Data"
author: "<br><br><span style='font-size:25px;'><strong>Lesley Chapman Hannah, Ph.D., M.S.</strong></span><br>College of Graduate Studies<br>Northeast Ohio Medical University"

format: 
  revealjs:
    #theme: solarized
    css: style.css
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/Flame.jpg
    #css: styles.css
    
---

## <span style="font-size:80%"></span> {.smaller}

::: columns
::: {.column width="100%"}
![](images/research_grant_idea.png){.border .border-thick}


:::

::: {.column width="0%"}


::: incremental



:::
:::
:::
::: footer
:::



## <span style="font-size:80%"></span> {.smaller}

::: columns
::: {.column width="100%"}
![](images/research_grant_idea_1.png){.border .border-thick}


:::

::: {.column width="0%"}


::: incremental



:::
:::
:::
::: footer
:::


## <span style="font-size:80%"></span> {.smaller}

::: columns
::: {.column width="100%"}
![](images/research_grant_idea_2.png){.border .border-thick}


:::

::: {.column width="0%"}


::: incremental



:::
:::
:::
::: footer
:::



## <span style="font-size:80%"></span> {.smaller}

::: columns
::: {.column width="100%"}
![](images/research_grant_idea_3.png){.border .border-thick}


:::

::: {.column width="0%"}


::: incremental



:::
:::
:::
::: footer
:::



## <span style="font-size:60%">Answering Biomedical Research Questions using Categorical Data Visualization</span> {.smaller}

::: columns

::: {.column width="100%"}
**Descriptive & Structural Questions **

::: incremental
  - Who/What  is in the data?
      - What categories exist?
      - How large are they?
      - How do groups overlap?
:::
:::

::: {.column width="0%"}

::: incremental

:::
:::
:::
::: footer
:::


## <span style="font-size:60%">Answering Biomedical Research Questions using Categorical Data Visualization</span> {.smaller}

::: columns

::: {.column width="100%"}
**Points to consider:**

::: incremental
  - Name/review variables
  - Understand variable type (nominal/ordinal/binary)
  - Describe variable’s role within the dataset (cohort descriptor, exposure, outcome/quality flag, operational)
      - Size categories (counts & %): what/who is in each group
      - Compare composition across groups: who differs from whom
      - Show overlaps between groups
  - Document cohort formation: how you got your final N.
  - Determine whether ordering matters

:::
:::

::: {.column width="0%"}

::: incremental

:::
:::
:::
::: footer
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Dataset

::: columns
::: column
- **Clinic** — nominal (A/B/C/D); cohort descriptor / clustering
- **AgeBand** — ordinal (18–54 < 55–74 < ≥75); case-mix
- **Blood glucose (Hem_A1c)** — ordinal (<7.0 < 7.0–8.9 < ≥9.0); disease control
:::

::: column
<div class="tiny-table">

```{r}
#| label: car-t-toxicity-table-1


df <- data.frame(
  Clinic = c("A","B","C","D"),
  AgeBand = c("18–54","55–74","≥75", "25–34"),
  Hem_A1c = c("<7.0","7.0–8.9","≥9.0","<5.0"),
  check.names = FALSE
)

knitr::kable(df, align = c("l","r","r"))

```
</div>
:::
:::




## Describe categories in dataset

::: columns
::: column
- **Payer** — nominal (Commercial/Medicare/Medicaid/Self-pay); operations/coverage
- **ScreenUpToDate** — binary (No/Yes); quality outcome/flag
- **Smoking** — nominal (Never/Former/Current); risk factor
- **Eosinophil** count (EosHigh) — binary (No/Yes); biomarker/proxy for COPD phenotype
:::

::: column

:::
:::


## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating category size across clinics**


- *Question*: How many patients does each clinic (A–D) contribute right now?
- *Plot type*: Bar chart of counts 
- *Rationale*:  “who’s in the cohort” 


:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 5

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

suppressPackageStartupMessages({
  library(ggplot2); library(forcats)
})

ggplot(df, aes(x = Clinic)) +
  geom_bar(fill = "#2A76DD") +
  labs(title = "Patients per Clinic", x = NULL, y = "Patients (n)") +
  theme_classic(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold"),
    panel.background = element_rect(fill = "white", colour = NA),
    plot.background  = element_rect(fill = "white", colour = NA)
  )
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>



## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**What the plot shows**


- The figure communicates **category size**
- **X-axis**: clinics
- **Y-axis** is labeled “Patients (n)”

    - raw counts (not percentages)
- **Bars = counts** (n) of patients per **Clinic** (A, B, C, D)
- The figure communicates **category size**

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 5

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

suppressPackageStartupMessages({
  library(ggplot2); library(forcats)
})

ggplot(df, aes(x = Clinic)) +
  geom_bar(fill = "#2A76DD") +
  labs(title = "Patients per Clinic", x = NULL, y = "Patients (n)") +
  theme_classic(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold"),
    panel.background = element_rect(fill = "white", colour = NA),
    plot.background  = element_rect(fill = "white", colour = NA)
  )
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>


## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Research utility**


- **Feasibility**: Allows you to identify where patient representation may be lacking for stratified or hierarchical analyses
- **Design signal**: If one clinic contributes most patients, consider **site stratification/weighting** to avoid downstream biased comparisons

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 5

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

suppressPackageStartupMessages({
  library(ggplot2); library(forcats)
})

ggplot(df, aes(x = Clinic)) +
  geom_bar(fill = "#2A76DD") +
  labs(title = "Patients per Clinic", x = NULL, y = "Patients (n)") +
  theme_classic(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold"),
    panel.background = element_rect(fill = "white", colour = NA),
    plot.background  = element_rect(fill = "white", colour = NA)
  )
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating composition across clinics (in-person visits): screening status**


- *Question*: Within each clinic, what share of in-person visits are up-to-date on diabetes screening?
- *Plot type*: 100% stacked bar chart shows composition within each clinic
- *Rationale*:
  
  - Allows to compare mix (Yes vs No) rather than raw volume

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

#Import libraries
suppressPackageStartupMessages({
  library(dplyr); library(ggplot2); library(scales)
})

# Select in person visits only
df_inp <- dplyr::filter(df, Visit == "In-person")

# Compute counts within each clinic
tab <- df_inp %>%
  count(Clinic, ScreenUpToDate, name = "n") %>%
  group_by(Clinic) %>%
  mutate(pct = n / sum(n)) %>%
  ungroup()
#Generate plot
ggplot(tab, aes(x = Clinic, y = pct, fill = ScreenUpToDate)) +
  geom_col(width = 0.85, color = "white") +
  scale_y_continuous(labels = percent) +
  labs(
    title = "Screening status for In-person visits — by Clinic",
    x = NULL, y = "Share", fill = "Screen up-to-date"
  ) +
  theme_classic(base_size = 16) +
  theme(legend.position = "bottom")
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>



<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating composition across clinics (in-person visits): screening status**

**What the plot shows**

- Each bar : a clinic (A–D).
- Stack segments = ScreenUpToDate categories (Yes/No)
- Y-axis : within-clinic share (percent); each bar sums to 100%
- Composition across clinics, not absolute counts

  
  - Allows to compare mix (Yes vs No) rather than raw volume

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

#Import libraries
suppressPackageStartupMessages({
  library(dplyr); library(ggplot2); library(scales)
})

# Select in person visits only
df_inp <- dplyr::filter(df, Visit == "In-person")

# Compute counts within each clinic
tab <- df_inp %>%
  count(Clinic, ScreenUpToDate, name = "n") %>%
  group_by(Clinic) %>%
  mutate(pct = n / sum(n)) %>%
  ungroup()
#Generate plot
ggplot(tab, aes(x = Clinic, y = pct, fill = ScreenUpToDate)) +
  geom_col(width = 0.85, color = "white") +
  scale_y_continuous(labels = percent) +
  labs(
    title = "Screening status for In-person visits — by Clinic",
    x = NULL, y = "Share", fill = "Screen up-to-date"
  ) +
  theme_classic(base_size = 16) +
  theme(legend.position = "bottom")
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>





<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating composition across clinics (in-person visits): screening status**

**Research utility**

- Study Feasibility: If some clinics have very low “Yes” rates—or one category is tiny consider pooling or sensitivity analyses

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

#Import libraries
suppressPackageStartupMessages({
  library(dplyr); library(ggplot2); library(scales)
})

# Select in person visits only
df_inp <- dplyr::filter(df, Visit == "In-person")

# Compute counts within each clinic
tab <- df_inp %>%
  count(Clinic, ScreenUpToDate, name = "n") %>%
  group_by(Clinic) %>%
  mutate(pct = n / sum(n)) %>%
  ungroup()
#Generate plot
ggplot(tab, aes(x = Clinic, y = pct, fill = ScreenUpToDate)) +
  geom_col(width = 0.85, color = "white") +
  scale_y_continuous(labels = percent) +
  labs(
    title = "Screening status for In-person visits — by Clinic",
    x = NULL, y = "Share", fill = "Screen up-to-date"
  ) +
  theme_classic(base_size = 16) +
  theme(legend.position = "bottom")
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating category size for Hemoglobin A1c distributions**

- *Question*: How many patients fall into each A1c category?

- *Plot type*: lollipop chart 

- Rationale:

  - line from 0 to the count with a dot at the top
  - shows category sizes with exact labels 


:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

#Import libraries
suppressPackageStartupMessages({
  library(dplyr); library(ggplot2); library(scales)
})

# Select data
a1c_counts <- df %>% count(Hem_A1c, name = "n")

# Plot with larger fonts
ggplot(a1c_counts, aes(x = Hem_A1c, y = n, color = Hem_A1c)) +
  geom_segment(aes(xend = Hem_A1c, y = 0, yend = n),
               linewidth = 1, lineend = "round") +
  geom_point(size = 5) +
  geom_text(aes(y = n * 1.08, label = comma(n)),
            size = 5, fontface = "bold", show.legend = FALSE) +
  scale_y_continuous(labels = comma, expand = expansion(mult = c(0.02, 0.20))) +
  labs(title = "Hemoglobin A1c distribution",
       x = NULL, y = "Patients (n)", color = NULL) +
  coord_cartesian(clip = "off") +
  theme_minimal(base_size = 18) +  # << bigger base font
  theme(
    panel.grid = element_blank(),
    plot.title = element_text(face = "bold", size = 22),
    axis.text.x = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold"),
    legend.position = "bottom",
    legend.text = element_text(size = 16),
    plot.margin = margin(t = 12, r = 24, b = 12, l = 12)
  )
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating category size for Hemoglobin A1c distributions**

**What the plot shows**

- Each point is the count (n) in an A1c_bin category
- Vertical segment emphasizes magnitude
- In-plot labels show exact counts
- Y-axis is Patients (n) (raw volume, not %).

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

#Import libraries
suppressPackageStartupMessages({
  library(dplyr); library(ggplot2); library(scales)
})

# Select data
a1c_counts <- df %>% count(Hem_A1c, name = "n")

# Plot with larger fonts
ggplot(a1c_counts, aes(x = Hem_A1c, y = n, color = Hem_A1c)) +
  geom_segment(aes(xend = Hem_A1c, y = 0, yend = n),
               linewidth = 1, lineend = "round") +
  geom_point(size = 5) +
  geom_text(aes(y = n * 1.08, label = comma(n)),
            size = 5, fontface = "bold", show.legend = FALSE) +
  scale_y_continuous(labels = comma, expand = expansion(mult = c(0.02, 0.20))) +
  labs(title = "Hemoglobin A1c distribution",
       x = NULL, y = "Patients (n)", color = NULL) +
  coord_cartesian(clip = "off") +
  theme_minimal(base_size = 18) +  # << bigger base font
  theme(
    panel.grid = element_blank(),
    plot.title = element_text(face = "bold", size = 22),
    axis.text.x = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold"),
    legend.position = "bottom",
    legend.text = element_text(size = 16),
    plot.margin = margin(t = 12, r = 24, b = 12, l = 12)
  )
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating category size for Hemoglobin A1c distributions**

**Research utility**

- **Feasibility & power**:  Could show whether you have enough patients in key strata (e.g., ≥9.0) for subgroup analyses
- **Design signals**: If a category is very small or absent, consider to pooling or redefining bins

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

#Import libraries
suppressPackageStartupMessages({
  library(dplyr); library(ggplot2); library(scales)
})

# Select data
a1c_counts <- df %>% count(Hem_A1c, name = "n")

# Plot with larger fonts
ggplot(a1c_counts, aes(x = Hem_A1c, y = n, color = Hem_A1c)) +
  geom_segment(aes(xend = Hem_A1c, y = 0, yend = n),
               linewidth = 1, lineend = "round") +
  geom_point(size = 5) +
  geom_text(aes(y = n * 1.08, label = comma(n)),
            size = 5, fontface = "bold", show.legend = FALSE) +
  scale_y_continuous(labels = comma, expand = expansion(mult = c(0.02, 0.20))) +
  labs(title = "Hemoglobin A1c distribution",
       x = NULL, y = "Patients (n)", color = NULL) +
  coord_cartesian(clip = "off") +
  theme_minimal(base_size = 18) +  # << bigger base font
  theme(
    panel.grid = element_blank(),
    plot.title = element_text(face = "bold", size = 22),
    axis.text.x = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold"),
    legend.position = "bottom",
    legend.text = element_text(size = 16),
    plot.margin = margin(t = 12, r = 24, b = 12, l = 12)
  )
```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating composition across groups**

- *Question*: How does the smoking mix compare across age bands?
- *Plot type*: row-normalized heatmap
- Rationale:

  - shows smoking status composition within each age band

:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

suppressPackageStartupMessages({ library(dplyr); library(ggplot2); library(scales) })

df <- df %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    Smoking = factor(Smoking, levels = c("Never","Former","Current"))
  )

tab_age_smoke <- df %>%
  count(AgeBand, Smoking, name = "n") %>%
  group_by(AgeBand) %>%
  mutate(pct = 100 * n / sum(n)) %>%
  ungroup()



p <- ggplot(tab_age_smoke, aes(x = Smoking, y = AgeBand, fill = pct)) +
  geom_tile() +
  geom_text(
    aes(label = sprintf("%0.0f%%\n(n=%s)", pct, scales::comma(n))),
    size = 4.2,
    fontface = "bold"
  ) +
  scale_fill_gradient(low = "#EFF6FF", high = "#2563EB", name = "Within age band (%)") +
  labs(
    title = "Smoking status by age band (row-normalized)",
    subtitle = "Each row sums to 100% • Descriptive composition (no inference)",
    x = "Smoking status", y = "Age band"
  ) +
  theme_minimal(base_size = 16) +
  theme(
    panel.grid = element_blank(),
    axis.text.x  = element_text(face = "bold"),
    axis.text.y  = element_text(face = "bold"),
    axis.title.x = element_text(face = "bold", margin = margin(t = 12)),
    axis.title.y = element_text(face = "bold", margin = margin(r = 14)),
    plot.title   = element_text(face = "bold")
  )

print(p)


```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating composition across groups**

**What the plot shows**

- **Axes** 
  - X-axis: Smoking status 
  - Y-axis:  Age band


- Color (fill): Percentage of individuals within each group [smoking status amongst age bands]
:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

suppressPackageStartupMessages({ library(dplyr); library(ggplot2); library(scales) })

df <- df %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    Smoking = factor(Smoking, levels = c("Never","Former","Current"))
  )

tab_age_smoke <- df %>%
  count(AgeBand, Smoking, name = "n") %>%
  group_by(AgeBand) %>%
  mutate(pct = 100 * n / sum(n)) %>%
  ungroup()



p <- ggplot(tab_age_smoke, aes(x = Smoking, y = AgeBand, fill = pct)) +
  geom_tile() +
  geom_text(
    aes(label = sprintf("%0.0f%%\n(n=%s)", pct, scales::comma(n))),
    size = 4.2,
    fontface = "bold"
  ) +
  scale_fill_gradient(low = "#EFF6FF", high = "#2563EB", name = "Within age band (%)") +
  labs(
    title = "Smoking status by age band (row-normalized)",
    subtitle = "Each row sums to 100% • Descriptive composition (no inference)",
    x = "Smoking status", y = "Age band"
  ) +
  theme_minimal(base_size = 16) +
  theme(
    panel.grid = element_blank(),
    axis.text.x  = element_text(face = "bold"),
    axis.text.y  = element_text(face = "bold"),
    axis.title.x = element_text(face = "bold", margin = margin(t = 12)),
    axis.title.y = element_text(face = "bold", margin = margin(r = 14)),
    plot.title   = element_text(face = "bold")
  )

print(p)


```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating composition across groups**

**What the plot shows**

- **Axes** 
  - X-axis: Smoking status 
  - Y-axis:  Age band


- Color (fill): Percentage of individuals within each group [smoking status amongst age bands]
:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

suppressPackageStartupMessages({ library(dplyr); library(ggplot2); library(scales) })

df <- df %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    Smoking = factor(Smoking, levels = c("Never","Former","Current"))
  )

tab_age_smoke <- df %>%
  count(AgeBand, Smoking, name = "n") %>%
  group_by(AgeBand) %>%
  mutate(pct = 100 * n / sum(n)) %>%
  ungroup()



p <- ggplot(tab_age_smoke, aes(x = Smoking, y = AgeBand, fill = pct)) +
  geom_tile() +
  geom_text(
    aes(label = sprintf("%0.0f%%\n(n=%s)", pct, scales::comma(n))),
    size = 4.2,
    fontface = "bold"
  ) +
  scale_fill_gradient(low = "#EFF6FF", high = "#2563EB", name = "Within age band (%)") +
  labs(
    title = "Smoking status by age band (row-normalized)",
    subtitle = "Each row sums to 100% • Descriptive composition (no inference)",
    x = "Smoking status", y = "Age band"
  ) +
  theme_minimal(base_size = 16) +
  theme(
    panel.grid = element_blank(),
    axis.text.x  = element_text(face = "bold"),
    axis.text.y  = element_text(face = "bold"),
    axis.title.x = element_text(face = "bold", margin = margin(t = 12)),
    axis.title.y = element_text(face = "bold", margin = margin(r = 14)),
    plot.title   = element_text(face = "bold")
  )

print(p)


```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>



<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>

## Visualize Categorical Data Landscape

::: columns
::: {.column .small}

**Evaluating composition across groups**

**Research utility (why this helps design)**

- **Confounding awareness:** 
  - If smoking composition differs by age could inform a downstream research question

- **Feasibility: **
  - In-tile (n) confirms whether strata like ≥75 and Smoking Status = Current are large enough for downstream analyses
:::
::: column

```{r}
#| fig-width: 8
#| fig-height: 9

#Full Dataset
suppressPackageStartupMessages(library(dplyr))
set.seed(123)

N <- 1500

df <- tibble(
  Clinic  = sample(c("A","B","C","D"), N, TRUE, c(.28,.28,.16,.28)),
  AgeBand = sample(c("18–54","55–74","≥75"), N, TRUE, c(.38,.46,.16)),
  Hem_A1c = sample(c("<7.0","7.0–8.9","≥9.0"), N, TRUE, c(.40,.42,.18)),
  Payer   = sample(c("Commercial","Medicare","Medicaid","Self-pay"), N, TRUE, c(.41,.35,.18,.06)),
  Visit   = sample(c("In-person","Telehealth","ED"), N, TRUE, c(.72,.22,.06)),
  ScreenUpToDate = sample(c("Yes","No"), N, TRUE, c(.72,.28)),
  Smoking = sample(c("Never","Former","Current"), N, TRUE, c(.55,.35,.10))
) %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    # Derive the A1c category factor from the Hem_A1c string
    A1cCat  = factor(Hem_A1c, levels = c("<7.0","7.0–8.9","≥9.0"), ordered = TRUE),
    Payer   = factor(Payer, levels = c("Commercial","Medicare","Medicaid","Self-pay")),
    Smoking = factor(Smoking, levels = c("Never","Former","Current")),
    # NEW: Simple COPD biomarker flag — High eosinophils (≥300 cells/µL) ~20%
    EosHigh = factor(
      sample(c("No","Yes"), N, replace = TRUE, prob = c(.80,.20)),
      levels = c("No","Yes")
    )
  )

suppressPackageStartupMessages({ library(dplyr); library(ggplot2); library(scales) })

df <- df %>%
  mutate(
    AgeBand = factor(AgeBand, levels = c("18–54","55–74","≥75"), ordered = TRUE),
    Smoking = factor(Smoking, levels = c("Never","Former","Current"))
  )

tab_age_smoke <- df %>%
  count(AgeBand, Smoking, name = "n") %>%
  group_by(AgeBand) %>%
  mutate(pct = 100 * n / sum(n)) %>%
  ungroup()



p <- ggplot(tab_age_smoke, aes(x = Smoking, y = AgeBand, fill = pct)) +
  geom_tile() +
  geom_text(
    aes(label = sprintf("%0.0f%%\n(n=%s)", pct, scales::comma(n))),
    size = 4.2,
    fontface = "bold"
  ) +
  scale_fill_gradient(low = "#EFF6FF", high = "#2563EB", name = "Within age band (%)") +
  labs(
    title = "Smoking status by age band (row-normalized)",
    subtitle = "Each row sums to 100% • Descriptive composition (no inference)",
    x = "Smoking status", y = "Age band"
  ) +
  theme_minimal(base_size = 16) +
  theme(
    panel.grid = element_blank(),
    axis.text.x  = element_text(face = "bold"),
    axis.text.y  = element_text(face = "bold"),
    axis.title.x = element_text(face = "bold", margin = margin(t = 12)),
    axis.title.y = element_text(face = "bold", margin = margin(r = 14)),
    plot.title   = element_text(face = "bold")
  )

print(p)


```
:::
:::


<style>
.tiny-table table { font-size: 0.8em; }        /* adjust as needed (0.8–0.9em) */
.tiny-table figcaption, .tiny-table .table-caption { font-size: 0.75em; }
</style>





## <span style="font-size:60%">Summary</span> {.smaller}

::: columns

::: {.column width="100%"}
**Utility of Categorical Data Visualization**

::: incremental
- **Classifies and organizes data** – Groups patients, outcomes, or variables into meaningful categories.

- **Reveals patterns and distributions** – Highlights trends across populations or treatment groups.

- **Supports comparisons** – Enables statistical and visual comparisons between groups.

- **Informs decision-making** – Guides research design, clinical interventions, and public health policies.

- **Facilitates hypothesis generation** – Helps identify associations and potential relationships for further study.

:::
:::

::: {.column width="0%"}


::: incremental

:::
:::
:::
::: footer
:::







